#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<stdlib.h>
#include<Windows.h>
#include<stack>

#define WALL 1
#define ME 3
#define WAY 4
#define NO_WAY 5
#define CLEAR 2

void map_draw(int map[][15])
{
	for (int Y = 0; Y < 10; Y++)
	{
		for (int X = 0; X < 15; X++)
		{
			if (map[Y][X] == 1)
				printf("▦");
			else if (map[Y][X] == 3)
			{
				printf("◎");
			}
			else
				printf("  ");
		}
		printf("\n");
	}
}

bool move(int map[][15],int x, int y, 
	std::stack<int>* character_X, std::stack<int>* character_Y)
{
	if (x > 0 && x < 15 && y>0 && y < 10)
	{
		if (map[y][x + 1] == 5 || map[y][x - 1] == 5
			|| map[y + 1][x] == 5 || map[y - 1][x] == 5
			|| map[y + 1][x + 1] == 5 || map[y - 1][x - 1] == 5
			|| map[y - 1][x + 1] == 5 || map[y + 1][x - 1] == 5)
		{
			return true;
		}
		else if (map[y][x] != WALL)
		{
			(*character_X).push(x);
			(*character_Y).push(y);
			map[y][x] = 0;
			x += 1;
			//작성중. 자신의 앞.양옆만을 탐색하고 지나온 자리(스텍에 저장되어있는)는 탐색하지않는다!
			if (!move(map, x, y, character_X, character_Y)) 
			{
				x -= 1;
				y += 1;
				if (!move(map, x, y, character_X, character_Y))
				{
					y += 1;
					if (!move(map, x, y + 1, character_X, character_Y))
					{
						move(map, x, y - 1, character_X, character_Y);
					}
				}
			}
			return false;
		}
	}
}
void main()
{
	int map[10][15] = {
	{ 1,1,3,1,1,1,1,1,1,1,1,1,1,1,1 },
	{ 1,1,0,0,0,0,1,0,1,0,0,0,0,0,1 },
	{ 1,1,1,1,0,0,1,0,0,0,1,1,1,0,1 },
	{ 1,0,1,0,0,0,0,1,0,0,0,0,1,0,1 },
	{ 1,0,0,0,1,0,0,1,0,1,0,1,1,1,1 },
	{ 1,1,1,1,1,0,0,0,0,1,0,0,1,0,1 },
	{ 1,0,0,0,1,0,0,0,1,1,1,0,0,0,1 },
	{ 1,1,1,0,0,0,1,1,1,0,0,0,1,1,1 },
	{ 1,0,0,0,1,0,0,0,1,0,1,0,0,0,1 },
	{ 1,1,1,1,1,1,1,1,1,1,1,1,2,1,1 } 
	};
	int x = 2, y = 0;
	std::stack<int> character_X;
	std::stack<int> character_Y;
	while (1)
	{
		Sleep(500);
		system("cls");
		map_draw(map);
		//간 길에 길없음혹은 본인이 있을 경우 > 현재 좌표를 반환하고 flase > 아니면 트루
		//만약 false인데 x12 y9 이면 출구임
		//상하좌우 모두 if > else if로. 나머지 else는 상하좌우 모두 가본길이거나 길이아닐때.
		//그때는 현재 좌표에 길없음을 놓고. 현재 좌표에 = 스텍좌표를 넣고 스텍pop. 갱신된 현재좌표에 자기자신을놓음 		

		if (move(map, x, y, &character_X, &character_Y) == true)
		{
			printf("\n 탈출!\n"); 
			return;
		}
	}
}
